version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: morganna-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: morganna_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - morganna-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d morganna_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # NestJS Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: morganna-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: morganna_db
      PORT: 3001
      FRONTEND_URL: http://frontend:3000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - morganna-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:3001/api
    container_name: morganna-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env.local
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - morganna-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

# Networks
networks:
  morganna-network:
    driver: bridge
    name: morganna-network

# Volumes
volumes:
  db-data:
    driver: local
    name: morganna-db-data
